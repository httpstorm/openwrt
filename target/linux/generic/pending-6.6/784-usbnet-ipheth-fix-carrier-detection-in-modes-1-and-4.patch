Delivered-To: gvalkov@gmail.com
Received: by 2002:ab2:9d1:0:b0:205:ab76:7763 with SMTP id l17csp556098lqd;
        Wed, 31 Jul 2024 10:28:06 -0700 (PDT)
X-Google-Smtp-Source: AGHT+IE+egvlcpVZUXlMl9CCiz/hl8Y6DfjweVb528ccT8wOLGOdwMNex6q6GelYAt6iQqZ6U+8J
X-Received: by 2002:a05:6358:7f88:b0:1ac:f436:c8ca with SMTP id e5c5f4694b2df-1af2ed16633mr10204355d.1.1722446886165;
        Wed, 31 Jul 2024 10:28:06 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1722446886; cv=none;
        d=google.com; s=arc-20160816;
        b=PNSLElt2YGj3RGUdTsQVKt/lhgfJUh4JHcmWczkNwdzo1V5H91avtLysoXHOuIGc/t
         Ay8eM8qvIAUudCpcRRQKzZ/2HzrP/GhbaCiyA5Wtjub/Xks+9wNg6gX9sjg3Nd4Uykrm
         4dGZJNrez+W/K/EGUkIlmgbsK7zQy2Dyy8W3okqBvdRCzl9ZGVZks1WA7G4xNKaJOJou
         pG0P3giRSYM1QoNyUg+R06uLO/B5GWA/+RaTluGq6mnQgj8+kTATmNMxOFBhNGCly7og
         I5viHLhbl/D/sHsVH3PeG2s4YwTSd2Hpv/BchAdgi/9mP/49eXwjmD4LW+/FpuH1lCgT
         gfSg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:to:from:dkim-signature;
        bh=FgLpi4ZieX5+Fj1bURuOsSB2vkWshfIkewvBMYLxdmw=;
        fh=TgFG3U4anRQdIImvNWYNegQTU2dZOq5zNGqYwYfO2Os=;
        b=qnF9jUoF/s/be2y5OYTXkpYv7C9EPElN/teHkcMVIJCfL8yBzVE7oAAl8uovsh1Rb6
         MTyG6rG0JysL/rzFvmrx8WWCmDzfGeIO5wgVuLTUlx9El2UEW/L1/2+JZq+6GVKcXck7
         kJZu50ZArp6q1Lr2QuCGBvPkZj0cdZcs47v+DWKVixvM9uWbR4eFhhaUi+1rNXb4hFm2
         XHZNIGeiIMW7t/CieZn9hrWbdshvKcWVd/1G4l38DCny9P4cXyMsA2Su1RYTLoETnDxP
         Gg56/EKtS/ScIaZprUVMLin6pxd2sj73RkBZHC+/VLd6niYKROnDYino3Pyi15dqHa+y
         XQnQ==;
        dara=google.com
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@pen.gy header.s=sig1 header.b=Kt06RFLx;
       spf=pass (google.com: domain of forst@pen.gy designates 17.57.155.5 as permitted sender) smtp.mailfrom=forst@pen.gy;
       dmarc=pass (p=REJECT sp=NONE dis=NONE) header.from=pen.gy
Return-Path: <forst@pen.gy>
Received: from qs51p00im-qukt01071502.me.com (qs51p00im-qukt01071502.me.com. [17.57.155.5])
        by mx.google.com with ESMTPS id 6a1803df08f44-6bb3fb0a727si160134806d6.548.2024.07.31.10.28.05
        for <gvalkov@gmail.com>
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Wed, 31 Jul 2024 10:28:06 -0700 (PDT)
Received-SPF: pass (google.com: domain of forst@pen.gy designates 17.57.155.5 as permitted sender) client-ip=17.57.155.5;
Authentication-Results: mx.google.com;
       dkim=pass header.i=@pen.gy header.s=sig1 header.b=Kt06RFLx;
       spf=pass (google.com: domain of forst@pen.gy designates 17.57.155.5 as permitted sender) smtp.mailfrom=forst@pen.gy;
       dmarc=pass (p=REJECT sp=NONE dis=NONE) header.from=pen.gy
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=pen.gy; s=sig1;
	t=1722446885; bh=FgLpi4ZieX5+Fj1bURuOsSB2vkWshfIkewvBMYLxdmw=;
	h=From:To:Subject:Date:Message-ID:MIME-Version;
	b=Kt06RFLxGxL+p3vCTvSpgR1SBbq6r7ndH/pNuowi/fXXQJJ1JfGBWekXw3T4a5+V/
	 3k9anJuDKcOaCrwBoH3Nos7B3Vfqf1G/sTM0diUHkQXsrSYs6gY4FoFX/TI3xGkENn
	 ue1u774HhPbkK2ZM7VLc6AGLoHwoNaat/XCTfXugGkaQwV17Ku3upYoE5qZGlhI/Bj
	 cJjsVmM8xfCT3WmhaOYzC3JZunojsxSmfzNP0cjaIWqmw/MsPEt2VMU7xtIwuXSFq2
	 eujjp4yA3N0yDCgKkDupRZMmMAoh4cHcnrhu0xo3eUXVUFJ3CAvot1pcrG6LpWapo6
	 NiqzsAvjyW7SA==
Received: from fossa.. (qs51p00im-dlb-asmtp-mailmevip.me.com [17.57.155.28])
	by qs51p00im-qukt01071502.me.com (Postfix) with ESMTPSA id 312846680297
	for <gvalkov@gmail.com>; Wed, 31 Jul 2024 17:28:03 +0000 (UTC)
From: Foster Snowhill <forst@pen.gy>
To: Georgi Valkov <gvalkov@gmail.com>
Subject: [PATCH net-next 4/4] usbnet: ipheth: fix carrier detection in modes 1 and 4
Date: Wed, 31 Jul 2024 19:27:34 +0200
Message-ID: <20240731172734.254892-4-forst@pen.gy>
X-Mailer: git-send-email 2.45.1
In-Reply-To: <20240731172734.254892-1-forst@pen.gy>
References: <20240731172734.254892-1-forst@pen.gy>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Proofpoint-GUID: MTi0MzJ-8xjiQ2P3Nifcfem-13_os3FN
X-Proofpoint-ORIG-GUID: MTi0MzJ-8xjiQ2P3Nifcfem-13_os3FN
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.272,Aquarius:18.0.1039,Hydra:6.0.680,FMLib:17.12.28.16
 definitions=2024-07-31_10,2024-07-31_01,2024-05-17_01
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 phishscore=0 mlxscore=0 malwarescore=0
 suspectscore=0 spamscore=0 mlxlogscore=701 adultscore=0 bulkscore=0
 clxscore=1030 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.19.0-2308100000 definitions=main-2407310122

Apart from the standard "configurations", "interfaces" and "alternate
interface settings" in USB, iOS devices also have a notion of
"modes". In different modes, the device exposes a different set of
available configurations.

Depending on the iOS version, and depending on the current mode, the
length and contents of the carrier status control message differs:

* 1 byte (seen on iOS 4.2.1, 8.4):
    * 03: carrier off (mode 0)
    * 04: carrier on (mode 0)
* 3 bytes (seen on iOS 10.3.4, 15.7.6):
    * 03 03 03: carrier off (mode 0)
    * 04 04 03: carrier on (mode 0)
* 4 bytes (seen on iOS 16.5, 17.6):
    * 03 03 03 00: carrier off (mode 0)
    * 04 03 03 00: carrier off (mode 1)
    * 06 03 03 00: carrier off (mode 4)
    * 04 04 03 04: carrier on (mode 0 and 1)
    * 06 04 03 04: carrier on (mode 4)

The first byte seems to indicate the number of available USB
configurations in the current mode (with the exception of the default
mode 0).

Only modes 0, 1 and 4 expose the USB ethernet interfaces.

Previous logic erroneously counted `04 03 03 00` as "carrier on" and
`06 04 03 04` as "carrier off" on newer devices.

Check the second byte of the control message where possible, and fall
back to checking the first byte on older devices.

Signed-off-by: Foster Snowhill <forst@pen.gy>
---
 drivers/net/usb/ipheth.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

--- a/drivers/net/usb/ipheth.c
+++ b/drivers/net/usb/ipheth.c
@@ -357,13 +357,14 @@ static int ipheth_carrier_set(struct iph
 			0x02, /* index */
 			dev->ctrl_buf, IPHETH_CTRL_BUF_SIZE,
 			IPHETH_CTRL_TIMEOUT);
-	if (retval < 0) {
+	if (retval <= 0) {
 		dev_err(&dev->intf->dev, "%s: usb_control_msg: %d\n",
 			__func__, retval);
 		return retval;
 	}
 
-	if (dev->ctrl_buf[0] == IPHETH_CARRIER_ON) {
+	if ((retval == 1 && dev->ctrl_buf[0] == IPHETH_CARRIER_ON) ||
+	    (retval >= 2 && dev->ctrl_buf[1] == IPHETH_CARRIER_ON)) {
 		netif_carrier_on(dev->net);
 		if (dev->tx_urb->status != -EINPROGRESS)
 			netif_wake_queue(dev->net);
